import {Telegraf} from 'telegraf'
import nodemailer from 'nodemailer'
import request from 'request'
import mysql from 'mysql2'

//Connect to DB (Params)
const connection = mysql.createConnection({
    host: "0.0.0.0",
    user: "user",
    database: "db",
    password: "dfjlkf"
});


const bot = new Telegraf('TOKEN');
let parseNumb = 0;
let lastName = [];
let global = [];
let bufId = 0;
let bufRes = 0;

//–ü–æ–¥–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (–ò–Ω—Ñ–∞ –≤—ã–≤–æ–¥–∏—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å –≤–≤–∏–¥–µ Json –æ–±—ä–µ–∫—Ç–æ–≤)
bot.use(Telegraf.log());

//–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –±–æ—Ç–∞. –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É START –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ, –±–æ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–±–æ—Ç—É.
bot.command('start', (ctx) => {
    const user_id = ctx.chat.id;
    const userText = ctx.message.message_id;
    const res = userText - 1;
    connection.connect(function (err) {
        if (err) throw err;
        console.log("Connected!");
        var sql = `select user_id
                   from data
                   where auth = 1
                     and user_id = ${user_id}`;
        connection.query(sql, function (err, result) {
            if (err) throw err;
            if (result.length === 0) {
                var res = 0;
            } else {
                console.log(result);
                res = result[0]['user_id'];
            }
            workWithResult(res);
        });
    });

    function workWithResult(result) {
        bufId = result;
        if (user_id === result) {
            ctx.deleteMessage();
            ctx.telegram.sendMessage(ctx.chat.id, '–í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã! –í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.',
                {
                    reply_markup: {
                        inline_keyboard: [
                            [{
                                text: "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†", callback_data: "Authorize"
                            }]
                        ],
                    }
                })
            bot.telegram.deleteMessage(ctx.chat.id, res);
        } else if (result === 0) {
            ctx.deleteMessage();
            ctx.telegram.sendMessage(ctx.chat.id, `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ,  ${ctx.from.first_name}! –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ø–æ–º–æ—â–Ω–∏–∫–∞, –í–∞–º —Å–ª–µ–¥—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –î–ª—è —ç—Ç–æ–≥–æ, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π —Ç–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.`)
        }
        return bufId;
    }
})

//–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∏–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, —Å—Ç–æ–∏—Ç –∑–∞—â–∏—Ç–∞ –æ—Ç "–î—É—Ä–∞–∫–∞" –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ ID –∏–∑ —Ç–∞–±—é–ª–∏—Ü—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö
bot.on('text', async (ctx) => {
    let userId = ctx.chat.id;
    let userText = ctx.message.text
    const id_repeate = ctx.message.message_id;
    const firstName = ctx.from.first_name;
    const userName = ctx.from.username;
    const res = id_repeate - 1;
    //Reg on
    if (!userText.match('\\b\\d\\d\\d\\d\\d\\d')) {
        let user_id2 = ctx.chat.id;
        connection.connect(function (err) {
            if (err) throw err;
            console.log("Connected!");
            var sql = `select user_id
                       from data
                       where auth = 1
                       and user_id = ${user_id2}`;
            connection.query(sql, function (err, result) {
                if (err) throw err;
                if (result.length === 0) {
                    var res = 0;
                } else {
                    console.log(result);
                    res = result[0]['user_id'];
                }
                workWithResult2(res);
            });
        });

        function workWithResult2(result) {
            bufRes = result
            return bufRes;
        }

        if (user_id2 === bufRes && userText != null) {
            bot.telegram.deleteMessage(ctx.chat.id, res);
            ctx.deleteMessage();
            ctx.telegram.sendMessage(ctx.chat.id, `–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞!`,
                {
                    reply_markup: {
                        inline_keyboard: [
                            [{
                                text: "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†", callback_data: "Authorize"
                            }]
                        ],
                    }
                })
            bot.telegram.deleteMessage(ctx.chat.id, res);
            //RegExp
        } else {
            parseNumb = parseInt(userText.match(/\d+/));
            lastName = userText.match(/[–ê-—è]+/gm);
            ctx.deleteMessage();
            var options = {
                'method': 'POST',
                'url': 'http://xxxxxx',
                'headers': {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    "action": "xxxxxxxx",
                    "last_name": `${lastName[0]}`,
                    "tnumber": `${parseNumb}`
                })
            };
            request(options, function (error, response) {
                if (error) throw new Error(error);
                let responses = response.body
                let parseResponse = responses.match('\\b\\d\\d\\d\\d\\d\\d');
                global.push({
                    resp111: `${parseResponse}`,
                })
            });
            bot.telegram.deleteMessage(ctx.chat.id, res);
            ctx.deleteMessage();
            ctx.telegram.sendMessage(ctx.chat.id, `–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã–π –Ω–∞ –í–∞—à –º–æ–±–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä`)
        }
    } else {
        console.log(global[0]['resp111'])
        if (userText === global[0]['resp111'] && global[0]['resp111'].length === 6) {
            connection.connect(function (err) {
                if (err) throw err;
                console.log("Connected!");
                var sql = `INSERT INTO data (user_id, full_name, username, last_name, tnum, auth)
                           VALUES ('${userId}', '${firstName}', '${userName}', '${lastName}', '${parseNumb}',
                                   '1')`;
                console.log(sql)
                connection.query(sql, function (err) {
                    if (err) throw err;
                    console.log(err)
                });
            });
            ctx.deleteMessage();
            bot.telegram.deleteMessage(ctx.chat.id, res);
            ctx.telegram.sendMessage(ctx.chat.id, `–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! ‚úÖ ${firstName}, —Ä–∞–¥—ã –í–∞—Å –≤–∏–¥–µ—Ç—å!`, {
                reply_markup: {
                    inline_keyboard: [
                        [{
                            text: "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É", callback_data: "Authorize"
                        }]
                    ],
                }
            })
            global = [];
        } else {
            bot.telegram.deleteMessage(ctx.chat.id, res);
            ctx.telegram.sendMessage(ctx.chat.id, '–í–≤–æ–¥–∏–º—ã–π –∫–æ–¥ –Ω–µ –≤–µ—Ä–µ–Ω! ‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞...')
            ctx.deleteMessage();
        }
    }
})

//–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞
bot.action('Authorize', (ctx) => {
    ctx.deleteMessage()
    ctx.telegram.sendMessage(ctx.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º –ø—É–Ω–∫—Ç –º–µ–Ω—é ‚úÖ ',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚Ü™ –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", callback_data: "Doc"
                    }],
                    [{
                        text: "–í—ã—Å–ª–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ QR Code 3CX", callback_data: "qr3cx"
                    }],
                    [{
                        text: "–ö–æ—Ä–ø–æ—Ä–æ—Ç–∏–≤–Ω—ã–π –ø–æ—Ä—Ç–∞–ª", callback_data: "Corp"
                    }],
                    [{
                        text: "–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–æ ERP —Å–∏—Å—Ç–µ–º–µ", callback_data: "Erp"
                    }],
                    [{
                        text: "‚Ü™ –ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–ª—É–∂–±", callback_data: "Service"
                    }],
                ]
            }
        });
})
//–ü–æ–¥–º–µ–Ω—é —Å –¥–æ–∫–∞–º–∏
bot.action('Doc', (ctx) => {
    ctx.deleteMessage();
    ctx.telegram.sendMessage(ctx.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º –ø—É–Ω–∫—Ç –º–µ–Ω—é ‚úÖ ',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "–•—Ä–∞–Ω–µ–Ω–∏–µ –í–∞—à–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏", callback_data: "lich"
                    }],
                    [{
                        text: "–û–±–º–µ–Ω –¥–æ–∫. —Å –∫–æ–ª–ª–µ–≥–∞–º–∏ –∏–∑ –í–∞—à–µ–≥–æ –æ—Ç–¥–µ–ª–∞", callback_data: "in"
                    }],
                    [{
                        text: "–û–±–º–µ–Ω –¥–æ–∫. —Å –∫–æ–ª–ª–µ–≥–∞–º–∏ –∏–∑ –¥—Ä—É–≥–∏—Ö –æ—Ç–¥–µ–ª–æ–≤", callback_data: "out"
                    }],
                    [{
                        text: "–ö–∞—Ç–∞–ª–æ–≥–∏ -–ü–æ –∑–∞–ø—Ä–æ—Å—É-", callback_data: "zapros"
                    }],
                    [{
                        text: "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†", callback_data: "Authorize"
                    }],
                ]
            }
        });
})

//–ü–æ–¥–º–µ–Ω—é —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ —Å–ª—É–∂–±
bot.action('Service', (ctx) => {
    ctx.deleteMessage();
    ctx.telegram.sendMessage(ctx.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º –ø—É–Ω–∫—Ç –º–µ–Ω—é ‚úÖ ',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "–°–ª—É–∂–±–∞ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∏", callback_data: "sdhelp"
                    }],
                    [{
                        text: "–°–ì–ò", callback_data: "sgi"
                    }],
                    [{
                        text: "–ö–∞–Ω—Ü–µ–ª—è—Ä–∏—è", callback_data: "chan"
                    }],
                    [{
                        text: "–û—Ç–¥–µ–ª –∫–∞–¥—Ä–æ–≤", callback_data: "ok"
                    }],
                    [{
                        text: "–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è", callback_data: "buh"
                    }],
                    [{
                        text: "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†", callback_data: "Authorize"
                    }],
                ]
            }
        });
})

//--------------–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π —Å –¥–æ–∫–∞–º–∏-------------
bot.action('lich', (ctx) => {
    ctx.deleteMessage();
    ctx.telegram.sendMessage(ctx.chat.id, '–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ö—Ä–∞–Ω–∏—Ç—å –≤ –ª–∏—á–Ω–æ–π –ø–∞–ø–∫–µ. ' +
        '–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ —Å–≤–æ—é –∏–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –∫–∞—Ç–∞–ª–æ–≥–µ - –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞_–¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\\ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ_–¥–æ–∫—É–º–µ–Ω—Ç—ã, ' +
        '–µ—ë –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –≤–∞—à–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. (–í–∞—à–∞ –ø–∞–ø–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö –º–µ—Å—Ç–∞—Ö).',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Doc"
                    }],
                ]
            },


        })
})
bot.action('in', (ctx) => {
    ctx.deleteMessage();
    ctx.telegram.sendMessage(ctx.chat.id, '–û–±—â–∏–π –∫–∞—Ç–∞–ª–æ–≥ –≤–∞—à–µ–≥–æ –æ—Ç–¥–µ–ª–∞ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –ø–æ –∞–¥—Ä–µ—Å—É - ' +
        '–î–æ–∫—É–º–µ–Ω—Ç—ã_–æ—Ç–¥–µ–ª–∞ (–ö–∞—Ç–∞–ª–æ–≥ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö –º–µ—Å—Ç–∞—Ö).',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Doc"
                    }],
                ]
            }

        })
})
bot.action('out', (ctx) => {
    ctx.deleteMessage();
    ctx.telegram.sendMessage(ctx.chat.id, '–ö–∞—Ç–∞–ª–æ–≥–∏ –¥–ª—è –æ–±–º–µ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏, –≤–Ω—É—Ç—Ä–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π –∏–ª–∏ —Å–æ –≤—Å–µ–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏ - ' +
        '–û–±–º–µ–Ω_–¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ (–ö–∞—Ç–∞–ª–æ–≥ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö –º–µ—Å—Ç–∞—Ö).',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Doc"
                    }],
                ]
            }

        })
})
bot.action('zapros', (ctx) => {
    ctx.deleteMessage();
    ctx.telegram.sendMessage(ctx.chat.id, '–û—Ç–¥–µ–ª—å–Ω—ã–µ –ø–∞–ø–∫–∏ –¥–ª—è –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ ' +
        '–≥—Ä—É–ø–ø–∞–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É (–≤—ã —É–≤–∏–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ç–µ, –∫ –∫–æ—Ç–æ—Ä—ã–º —É –≤–∞—Å –∏–º–µ–µ—Ç—Å—è –¥–æ—Å—Ç—É–ø) - ' +
        '–ü–æ_–∑–∞–ø—Ä–æ—Å—É (–ö–∞—Ç–∞–ª–æ–≥ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö –º–µ—Å—Ç–∞—Ö).',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Doc"
                    }],
                ]
            }

        })
})
//-------------------------------------------------------

//–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∏–Ω—Ñ—ã –ø–æ –ø–æ—Ä—Ç–∞–ª—É
bot.action('Corp', (ctx) => {
    ctx.deleteMessage();
    ctx.telegram.sendMessage(ctx.chat.id, '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –Ω–∞ –Ω–∞—à –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–æ—Ä—Ç–∞–ª –≤–∞–º –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ - ' +
        '(–ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–Ω–æ –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –ª—é–±–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞, –Ω–æ —Ç–æ–ª—å–∫–æ —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞).',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Authorize"
                    }],
                ]
            }

        })
})
//–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∏–Ω—Ñ—ã –ø–æ ERP
bot.action('Erp', (ctx) => {
    ctx.deleteMessage();
    ctx.telegram.sendMessage(ctx.chat.id, '–ü–æ—Ä—Ç–∞–ª —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –±–∞–∑—É –∑–Ω–∞–Ω–∏–π –ø–æ ERP-—Å–∏—Å—Ç–µ–º–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ - ' +
        '(–ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–Ω–æ –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –ª—é–±–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞, –Ω–æ —Ç–æ–ª—å–∫–æ —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞).',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Authorize"
                    }],
                ]
            }

        })
})

//--------------–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏----------
bot.action('sdhelp', (ctx) => {
    ctx.deleteMessage();
    ctx.telegram.sendMessage(ctx.chat.id, '–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –ø—Ä–æ–±–ª–µ–º —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –æ—Å–Ω–∞—â–µ–Ω–∏–µ–º –≤–∞—à–∏—Ö —Ä–∞–±–æ—á–∏–º –º–µ—Å—Ç; ' +
        '–Ω–µ–ø–æ–ª–∞–¥–æ–∫ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ —Ä–∞–±–æ—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è; –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–∫–∏–º-–ª–∏–±–æ —Å–µ—Ä–≤–∏—Å–∞–º –∏–ª–∏ —É—Å–ª—É–≥–∞–º ‚Äì –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ ' +
        '—Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º –æ –Ω–∏—Ö, –æ—Å—Ç–∞–≤–∏–≤ –∑–∞—è–≤–∫—É –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –Ω–∞–ø–∏—Å–∞–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ –Ω–∞ –ø–æ—á—Ç—É (–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π) ' +
        '–∏–ª–∏ ',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Service"
                    }],
                ]
            }

        })
})
bot.action('sgi', (ctx) => {
    ctx.deleteMessage();
    ctx.telegram.sendMessage(ctx.chat.id, '–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ –º–µ–±–µ–ª–∏, —ç–ª–µ–∫—Ç—Ä–æ–ø–∏—Ç–∞–Ω–∏—è, –æ—Å–≤–µ—â–µ–Ω–∏—è –∏ –¥—Ä—É–≥–∏—Ö —Ö–æ–∑.–Ω—É–∂–¥ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è ' +
        '–≤ –°–ª—É–∂–±—É –ì–ª–∞–≤–Ω–æ–≥–æ –ò–Ω–∂–µ–Ω–µ—Ä–∞, –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –Ω–∞–ø–∏—Å–∞–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ –Ω–∞ –ø–æ—á—Ç—É',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Service"
                    }],
                ]
            }

        })
})
bot.action('chan', (ctx) => {
    ctx.deleteMessage();
    ctx.telegram.sendMessage(ctx.chat.id, '–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –∫–∞—Å–∞—é—â–∏–µ—Å—è –∫–∞–Ω—Ü–µ–ª—è—Ä–∏–∏, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ' +
        '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É. –í –≥–æ–ª–æ—Å–æ–≤–æ–º –º–µ–Ω—é IVR –≤—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å —Ä–∞–∑–¥–µ–ª.',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Service"
                    }],
                ]
            }

        })
})
bot.action('ok', (ctx) => {
    ctx.deleteMessage();
    ctx.telegram.sendMessage(ctx.chat.id, '–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –∫–∞—Å–∞—é—â–∏–µ—Å—è –æ—Ç–¥–µ–ª–∞ –∫–∞–¥—Ä–æ–≤, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ' +
        '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É –í –≥–æ–ª–æ—Å–æ–≤–æ–º –º–µ–Ω—é IVR –≤—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å —Ä–∞–∑–¥–µ–ª',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Service"
                    }],
                ]
            }

        })
})
bot.action('buh', (ctx) => {
    ctx.deleteMessage();
    ctx.telegram.sendMessage(ctx.chat.id, '–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –∫–∞—Å–∞—é—â–∏–µ—Å—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ' +
        '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É –í –≥–æ–ª–æ—Å–æ–≤–æ–º –º–µ–Ω—é IVR –≤—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å —Ä–∞–∑–¥–µ–ª',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Service"
                    }],
                ]
            }

        })
})
//-------------------------------------------------------

//--------------–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π 3 CX-----------------
bot.action('qr3cx', (ctx) => {
    ctx.deleteMessage();
    ctx.telegram.sendMessage(ctx.chat.id, '–ï—Å–ª–∏ —É –í–∞—Å –∏–º–µ–µ—Ç—Å—è —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å, –í—ã –º–æ–∂–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å QRCode. –í —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å–≤–∏—è —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å–æ–∑–¥–∞—Ç—å —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å.',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "–í—ã—Å–ª–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ QR Code –Ω–∞ –ø–æ—á—Ç—É", callback_data: "repeat"
                    }],
                    [{
                        text: "–°–æ–∑–¥–∞—Ç—å —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å 3Cx ", callback_data: "create"
                    }],
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Authorize"
                    }],
                ]
            }

        })
})
bot.action('create', (ctx) => {
    ctx.deleteMessage();
    ctx.telegram.sendMessage(ctx.chat.id, '–°—Ö–µ–º–∞ —Ä–∞–±–æ—Ç—ã: 1) –ü—Ä–∏ –≤—Ö–æ–¥—è—â–µ–º –∑–≤–æ–Ω–∫–µ –∑–≤–æ–Ω–∏—Ç —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –∏ 3CX –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –º–æ–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω–µ. 2) –ü—Ä–∏ –≤—Ö–æ–¥—è—â–µ–º –∑–≤–æ–Ω–∫–µ –∑–≤–æ–Ω–∏—Ç —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω, –¥–∞–ª–µ–µ, —á–µ—Ä–µ–∑ 3-4 —Å–µ–∫—É–Ω–¥—ã –∑–≤–æ–Ω–∏—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ 3Cx.',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: " Android üíª 1 –í–∞—Ä–∏–∞–Ω—Ç", callback_data: "android1"
                    }],
                    [{
                        text: " Android üíª 2 –í–∞—Ä–∏–∞–Ω—Ç", callback_data: "android2"
                    }],
                    [{
                        text: "iOS (Iphone) üçé 1 –í–∞—Ä–∏–∞–Ω—Ç", callback_data: "iphone1"
                    }],
                    [{
                        text: "iOS (Iphone) üçé 2 –í–∞—Ä–∏–∞–Ω—Ç", callback_data: "iphone2"
                    }],
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Authorize"
                    }],
                ]
            }
        })
})
bot.action('android1', (ctx) => {
    ctx.deleteMessage();
    let userId3cx = ctx.chat.id;
    ctx.telegram.sendMessage(ctx.chat.id, '–ü–∏—Å—å–º–æ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –ß–µ—Ä–µ–∑ –Ω–µ–∫—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è —Å –í–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –ø–æ —ç–ª–µ–∫—Ç—Ä–Ω–Ω–æ–π –ø–æ—á—Ç–µ.',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Authorize"
                    }],
                ]
            }
        })
    connection.connect(function (err) {
        if (err) throw err;
        console.log("Connected!");
        var sql = `select tnum
                   from data
                   where auth = 1
                     and user_id = ${userId3cx}`;
        connection.query(sql, function (err, result) {
            if (err) throw err;
            console.log(result);
            var res = result[0]['tnum'];
            cx(res);
        });
    });

    function cx(result) {
        var tnum = result;
        console.log(tnum)

        async function main() {
            let transporter = nodemailer.createTransport({
                host: "0.0.0.0",
                port: 25,
                secure: false,
                tls: {rejectUnauthorized: false},
                auth: {
                    user: '000000',
                    pass: '000000',
                },
            });

            let info = await transporter.sendMail({
                from: '000000',
                to: "000000000",
                subject: `–ù–æ–≤–∞—è —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å 3CX –¥–ª—è ${tnum} (–¢–∞–±. –ù–æ–º–µ—Ä)`,
                html: `–°—Ö–µ–º–∞ —Ä–∞–±–æ—Ç—ã: –ü—Ä–∏ –≤—Ö–æ–¥—è—â–µ–º –∑–≤–æ–Ω–∫–µ –∑–≤–æ–Ω–∏—Ç —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –∏ 3CX –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –º–æ–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω–µ. –û–° - Android (–î–æ–ø–∏—Å–∞—Ç—å –≤ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∑–∞—è–≤–∫–µ –ø–æ—á—Ç—É –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞)`,
            });
            console.log("Message sent: %s", info.messageId);
            console.log("Preview URL: %s", nodemailer.getTestMessageUrl(info));
        }

        main().catch(console.error)
    }
})
bot.action('android2', (ctx) => {
    ctx.deleteMessage();
    let userId3cx = ctx.chat.id;
    ctx.telegram.sendMessage(ctx.chat.id, '–ü–∏—Å—å–º–æ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –ß–µ—Ä–µ–∑ –Ω–µ–∫—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è —Å –í–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –ø–æ —ç–ª–µ–∫—Ç—Ä–Ω–Ω–æ–π –ø–æ—á—Ç–µ.',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Authorize"
                    }],
                ]
            }
        })
    connection.connect(function (err) {
        if (err) throw err;
        console.log("Connected!");
        var sql = `select tnum
                   from data
                   where auth = 1
                     and user_id = ${userId3cx}`;
        connection.query(sql, function (err, result) {
            if (err) throw err;
            console.log(result);
            var res = result[0]['tnum'];
            cx(res);
        });
    });

    function cx(result) {
        var tnum = result;
        console.log(tnum)

        async function main() {
            let transporter = nodemailer.createTransport({
                host: "0.0.0.0",
                port: 25,
                secure: false,
                tls: {rejectUnauthorized: false},
                auth: {
                    user: '0.0.0.0',
                    pass: 'fhhf',
                },
            });

            let info = await transporter.sendMail({
                from: '0000000',
                to: "0.0.0.0",
                subject: `–ù–æ–≤–∞—è —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å 3CX –¥–ª—è ${tnum} (–¢–∞–±. –ù–æ–º–µ—Ä)`,
                html: `–°—Ö–µ–º–∞ —Ä–∞–±–æ—Ç—ã: –ü—Ä–∏ –≤—Ö–æ–¥—è—â–µ–º –∑–≤–æ–Ω–∫–µ –∑–≤–æ–Ω–∏—Ç —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω, –¥–∞–ª–µ–µ, —á–µ—Ä–µ–∑ 3-4 —Å–µ–∫—É–Ω–¥—ã –∑–≤–æ–Ω–∏—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ 3Cx. –û–° - Android (–î–æ–ø–∏—Å–∞—Ç—å –≤ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∑–∞—è–≤–∫–µ –ø–æ—á—Ç—É –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞)`,
            });

            console.log("Message sent: %s", info.messageId);
            console.log("Preview URL: %s", nodemailer.getTestMessageUrl(info));
        }

        main().catch(console.error)
    }
})
bot.action('iphone1', (ctx) => {
    ctx.deleteMessage();
    let userId3cx = ctx.chat.id;
    ctx.telegram.sendMessage(ctx.chat.id, '–ü–∏—Å—å–º–æ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –ß–µ—Ä–µ–∑ –Ω–µ–∫—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è —Å –í–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –ø–æ —ç–ª–µ–∫—Ç—Ä–Ω–Ω–æ–π –ø–æ—á—Ç–µ.',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Authorize"
                    }],
                ]
            }
        })
    connection.connect(function (err) {
        if (err) throw err;
        console.log("Connected!");
        var sql = `select tnum
                   from data
                   where auth = 1
                     and user_id = ${userId3cx}`;
        connection.query(sql, function (err, result) {
            if (err) throw err;
            console.log(result);
            var res = result[0]['tnum'];
            cx(res);
        });
    });

    function cx(result) {
        var tnum = result;
        console.log(tnum)

        async function main() {
            let transporter = nodemailer.createTransport({
                host: "0.0.0.0",
                port: 25,
                secure: false,
                tls: {rejectUnauthorized: false},
                auth: {
                    user: '0.0.0.0',
                    pass: '0.0.0.0',
                },
            });

            let info = await transporter.sendMail({
                from: '0000000',
                to: "000000",
                subject: `–ù–æ–≤–∞—è —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å 3CX –¥–ª—è ${tnum} (–¢–∞–±. –ù–æ–º–µ—Ä)`,
                html: `–°—Ö–µ–º–∞ —Ä–∞–±–æ—Ç—ã: –ü—Ä–∏ –≤—Ö–æ–¥—è—â–µ–º –∑–≤–æ–Ω–∫–µ –∑–≤–æ–Ω–∏—Ç —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –∏ 3CX –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –º–æ–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω–µ. –û–° - iOS (–î–æ–ø–∏—Å–∞—Ç—å –≤ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∑–∞—è–≤–∫–µ –ø–æ—á—Ç—É –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞)`,
            });
            console.log("Message sent: %s", info.messageId);
            console.log("Preview URL: %s", nodemailer.getTestMessageUrl(info));
        }

        main().catch(console.error)
    }
})
bot.action('iphone2', (ctx) => {
    ctx.deleteMessage();
    let userId3cx = ctx.chat.id;
    ctx.telegram.sendMessage(ctx.chat.id, '–ü–∏—Å—å–º–æ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –ß–µ—Ä–µ–∑ –Ω–µ–∫—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è —Å –í–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –ø–æ —ç–ª–µ–∫—Ç—Ä–Ω–Ω–æ–π –ø–æ—á—Ç–µ.',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Authorize"
                    }],
                ]
            }
        })
    connection.connect(function (err) {
        if (err) throw err;
        console.log("Connected!");
        var sql = `select tnum
                   from data
                   where auth = 1
                     and user_id = ${userId3cx}`;
        connection.query(sql, function (err, result) {
            if (err) throw err;
            console.log(result);
            var res = result[0]['tnum'];
            cx(res);
        });
    });

    function cx(result) {
        var tnum = result;
        console.log(tnum)

        async function main() {
            let transporter = nodemailer.createTransport({
                host: "0.0.0.0",
                port: 25,
                secure: false,
                tls: {rejectUnauthorized: false},
                auth: {
                    user: '000000',
                    pass: 'sdfsdfsdf',
                },
            });

            let info = await transporter.sendMail({
                from: '000000',
                to: "00000",
                subject: `–ù–æ–≤–∞—è —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å 3CX –¥–ª—è ${tnum} (–¢–∞–±. –ù–æ–º–µ—Ä)`,
                html: `–°—Ö–µ–º–∞ —Ä–∞–±–æ—Ç—ã: –ü—Ä–∏ –≤—Ö–æ–¥—è—â–µ–º –∑–≤–æ–Ω–∫–µ –∑–≤–æ–Ω–∏—Ç —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω, –¥–∞–ª–µ–µ, —á–µ—Ä–µ–∑ 3-4 —Å–µ–∫—É–Ω–¥—ã –∑–≤–æ–Ω–∏—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ 3Cx. –û–° - iOS (–î–æ–ø–∏—Å–∞—Ç—å –≤ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∑–∞—è–≤–∫–µ –ø–æ—á—Ç—É –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞)`,
            });

            console.log("Message sent: %s", info.messageId);
            console.log("Preview URL: %s", nodemailer.getTestMessageUrl(info));
        }

        main().catch(console.error)
    }
})
bot.action('repeat', (ctx) => {
    ctx.deleteMessage();
    let userId3cx = ctx.chat.id;
    ctx.telegram.sendMessage(ctx.chat.id, '–ü–∏—Å—å–º–æ –æ –ø—Ä–æ—Å—å–±–µ –≤—ã—Å–ª–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ QRCode –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Å–ª—É–∂–±—É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –ß–µ—Ä–µ–∑ –Ω–µ–∫—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è —Å –í–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ.',
        {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "‚¨Ö –ù–∞–∑–∞–¥ ", callback_data: "Authorize"
                    }],
                ]
            }
        })
    connection.connect(function (err) {
        if (err) throw err;
        console.log("Connected!");
        var sql = `select last_name, tnum
                   from data
                   where auth = 1
                     and user_id = ${userId3cx}`;
        connection.query(sql, function (err, result) {
            if (err) throw err;
            console.log(result);
            var res = result[0]['last_name'];
            var tnum = result[0]['tnum']
            cx(res, tnum);
        });
    });

    function cx(result, tnum) {
        var last_name = result;
        var tnNum = tnum;
        console.log(last_name)

        async function main() {
            let transporter = nodemailer.createTransport({
                host: "000000",
                port: 25,
                secure: false,
                tls: {rejectUnauthorized: false},
                auth: {
                    user: '0000',
                    pass: '000000',
                },
            });

            let info = await transporter.sendMail({
                from: '00000',
                to: "0000000000",
                subject: `–ü—Ä–æ—Å—å–±–∞ –≤—ã—Å–ª–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ QRCode 3CX –¥–ª—è ${last_name} —Ç–∞–±. –Ω–æ–º–µ—Ä ${tnNum}`,
                html: `–ü–µ—Ä–µ–∫–∏–Ω—É—Ç—å –∑–∞—è–≤–∫—É –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–∏—é.`,
            });

            console.log("Message sent: %s", info.messageId);
            console.log("Preview URL: %s", nodemailer.getTestMessageUrl(info));
        }

        main().catch(console.error)
    }
})
bot.action('mail', (ctx) => {

    async function main() {
        let transporter = nodemailer.createTransport({
            host: "0000000",
            port: 25,
            secure: false,
            tls: {rejectUnauthorized: false},
            auth: {
                user: '00000',
                pass: '000000',
            },
        });

        var attachments = [{
            filename: '0000',
            path: '000000',
            contentType: 'application/jpg'
        }];

        let info = await transporter.sendMail({
            from: '00000000',
            to: "000000",
            subject: "QR Code –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è 3CX",
            html: "–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Å–≤–æ–µ–º —Å–º–∞—Ä—Ç—Ñ–æ–Ω–µ –∏ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QRCode. " +
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ —ç—Ç–æ –ø–∏—Å—å–º–æ. –û–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏",
            attachments: attachments,
        });

        console.log("Message sent: %s", info.messageId);
        console.log("Preview URL: %s", nodemailer.getTestMessageUrl(info));
    }

    main().catch(console.error);

})
//-------------------------------------------------------

bot.launch();
